---
import NavItem from "./NavItem.astro";
import { Icon } from "astro-icon";

const navItems = [
  { name: "About", path: "/about/" },
  { name: "Blogs", path: "/blogs/" },
  { name: "Projects", path: "/projects/" },
  { name: "Contact", path: "/contact/" },
];
---

<nav
  class="flex flex-col md:flex-row justify-between items-center my-5 md:relative"
>
  <div class="flex w-full md:w-auto items-center justify-between z-10">
    <div class="flex">
      <a href="/" class="text-xl"
        ><span class="font-bold text-slate-800 dark:text-slate-200">Kenji</span
        ><span class="text-slate-500">Docs</span>
      </a>

      <button class="w-6 ml-1" id="light-dark-mode">
        <Icon name="ic:round-light-mode" id="sun" class="hidden" />
        <Icon name="ic:round-dark-mode" id="moon" class="hidden" />
      </button>
    </div>

    <button class="w-6 block md:hidden" id="menu">
      <Icon name="ic:baseline-menu" class="nav-btn" />
      <Icon name="ic:round-close" class="hidden nav-btn" />
    </button>
  </div>

  <div
    class="w-full flex flex-col justify-start items-start md:flex-row md:justify-end"
  >
    {navItems.map((item) => <NavItem name={item.name} path={item.path} />)}
  </div>
</nav>

<script>
  let menu = document.querySelector("#menu");
  menu?.addEventListener("click", () => {
    document.querySelectorAll(".nav-item, .nav-btn").forEach((item) => {
      item.classList.toggle("hidden");
    });
  });

  let prefersDark = window.matchMedia("(prefers-color-scheme: dark)");
  let darkMode = localStorage.getItem("darkMode");
  const sun = document.querySelector("#sun");
  const moon = document.querySelector("#moon");

  let turnOnDarkMode = () => {
    document.documentElement.classList.add("dark");
    localStorage.setItem("darkMode", "on");
    sun?.classList.add("hidden");
    moon?.classList.remove("hidden");
  };

  let turnOffDarkMode = () => {
    document.documentElement.classList.remove("dark");
    localStorage.setItem("darkMode", "off");
    sun?.classList.remove("hidden");
    moon?.classList.add("hidden");
  };

  // Initial setup
  if (darkMode === null) {
    if (prefersDark.matches) {
      turnOnDarkMode();
    } else {
      turnOffDarkMode();
    }
  } else {
    if (darkMode === "on") {
      turnOnDarkMode();
    } else {
      turnOffDarkMode();
    }
  }

  prefersDark.addEventListener("change", (e) => {
    if (e.matches) {
      turnOnDarkMode();
    } else {
      turnOffDarkMode();
    }
  });

  let themeBtn = document.querySelector("#light-dark-mode");
  themeBtn?.addEventListener("click", () => {
    darkMode = localStorage.getItem("darkMode");
    if (darkMode === "on") {
      turnOffDarkMode();
    } else {
      turnOnDarkMode();
    }
  });
</script>
