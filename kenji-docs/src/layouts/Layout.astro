---
import BaseHead from "../components/layout/BaseHead.astro";
import Header from "../components/layout/Header.astro";
import Footer from "../components/layout/Footer.astro";

export interface Props {
  title: string;
  description: string;
}

import Particles from "astro-particles";
import type { ISourceOptions } from "tsparticles-engine";

const options: ISourceOptions = {
  fullScreen: {
    zIndex: -1,
  },
  fps_limit: 60,
  interactivity: {
    detectsOn: "canvas",
    events: {
      onClick: {
        enable: true,
        mode: "push",
      },
      onHover: {
        enable: true,
        mode: "repulse",
      },
      resize: true,
    },
    modes: {
      push: {
        particles_nb: 4,
      },
      repulse: {
        distance: 200,
        duration: 0.4,
      },
    },
  },
  particles: {
    color: {
      value: "#748BA7",
    },
    links: {
      color: "#748BA7",
      distance: 150,
      enable: true,
      opacity: 0.4,
      width: 1,
    },
    move: {
      bounce: false,
      direction: "none",
      enable: true,
      outMode: "out",
      random: false,
      speed: 2,
      straight: false,
    },
    number: {
      density: {
        enable: true,
        area: 800,
      },
      value: 80,
    },
    opacity: {
      value: 0.5,
    },
    shape: {
      type: "circle",
    },
    size: {
      random: true,
      value: 5,
    },
  },
  detectRetina: true,
};

const { title, description } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body class="dark:bg-slate-900 dark:text-white">
    <script>
      if ("serviceWorker" in navigator) {
        navigator.serviceWorker
          .register("/service-worker.js")
          .then((registration) => {
            console.log("SW Registered!");
          })
          .catch((error) => {
            console.log("SW Registration Failed");
          });
      } else {
        console.log("Not supported");
      }
    </script>

    <script>
      import { tsParticles } from "tsparticles-engine";
      import { loadFull } from "tsparticles";

      (async () => {
        await loadFull(tsParticles);
      })();
    </script>
    <div class="max-w-screen-lg mx-auto px-5">
      <Header />
      <main class="flex flex-col justify-center items-center my-16">
        <slot />
      </main>
      <Footer />
      <Particles id="tsparticles" options={options} />
    </div>
  </body>
</html>
